-- ELIMINACION DE TABLAS
DROP TABLE AEROPUERTO;
DROP TABLE AVION;
DROP TABLE BOLETA;
DROP TABLE CIUDAD;
DROP TABLE CLIENTE;
DROP TABLE CREDITO;
DROP TABLE DEBITO;
DROP TABLE DESTINO;
DROP TABLE DETALLE_COMPRA;
DROP TABLE ENCUESTA;
DROP TABLE FORMA_PAGO;
DROP TABLE ITINERARIO;
DROP TABLE ORIGEN;
DROP TABLE PAIS;
DROP TABLE PASAJE;
DROP TABLE PASAJERO;
DROP TABLE VUELO;
DROP TABLE BANCO;
DROP TABLE CARRITO;

-- CREACION DE TABLAS
CREATE TABLE AEROPUERTO
(
	ID_AEROPUERTO NVARCHAR2(50) NOT NULL,
	DIRECCION NVARCHAR2(50),
	CIUDAD NVARCHAR2(50),
	NOMBRE NVARCHAR2(50)
);

CREATE TABLE AVION
(
	ID_AVION NVARCHAR2(50) NOT NULL,
	MODELO NVARCHAR2(50),
	CAPACIDAD NUMBER,
	ANIO DATE
);

CREATE TABLE BOLETA
(
	ID_BOLETA NVARCHAR2(50) NOT NULL,
	CLIENTE NVARCHAR2(50),
	FECHA DATE,
	HORA NUMBER,
	TOTAL NUMBER CHECK(TOTAL>0),
	ESTADO NVARCHAR2(50),
	FORMA_DE_PAGO NVARCHAR2(50)
);

CREATE TABLE CIUDAD
(
	ID_CIUDAD NVARCHAR2(50) NOT NULL,
	NOMBRE NVARCHAR2(50),
	PAIS NVARCHAR2(50)
);

CREATE TABLE CLIENTE
(
	ID_CLIENTE NVARCHAR2(50) NOT NULL,
	NOMBRE NVARCHAR2(50),
	APELLIDO NVARCHAR2(50),
	FECHA_NACIMIENTO DATE,
	GENERO NVARCHAR2(50),
	TIPO_DOCUMENTO NVARCHAR2(50),
	FECHA_VENCIMIENTO_DOCUMENTO DATE,
	NUMERO_DOCUMENTO NVARCHAR2(50), 
	NACIONALIDAD NVARCHAR2(50), 
	PAIS NVARCHAR2(50),
	TELEFONO NVARCHAR2(50) UNIQUE,
	EMAIL NVARCHAR2(50) UNIQUE,
	CONSTRASENA NVARCHAR2(50)
);

CREATE TABLE CREDITO
(
	ID_CREDITO NVARCHAR2(50) NOT NULL,
	N_TARJETA NVARCHAR2(50) UNIQUE,
	FECHA_CADUCIDAD DATE,
	CVV NVARCHAR2(50),
	N_CUOTAS NUMBER,
	NOMBRE_TITULAR NVARCHAR2(50),
	CALLE NVARCHAR2(50),
	NUMERO NVARCHAR2(50),
	CIUDAD NVARCHAR2(50),
	PAIS NVARCHAR2(50),
	CUPO NUMBER,
	CUPO_UTILIZADO NUMBER,
	CUPO_DISPONIBLE NUMBER
);

CREATE TABLE DEBITO
(
	ID_DEBITO NVARCHAR2(50) NOT NULL,
	BANCO NVARCHAR2(50),
	RUT NVARCHAR2(50),
	N_TARJETA NVARCHAR2(50) UNIQUE,
	CONTRASENA NVARCHAR2(50),
	SALDO NUMBER,
	SALDO_UTILIZADO NUMBER,
	SALDO_DISPONIBLE NUMBER
);

CREATE TABLE BANCO
(
	ID_PAGO NVARCHAR2(50) NOT NULL,
	ID_BANCO NVARCHAR2(50)
);

CREATE TABLE DESTINO
(
	ID_DESTINO NVARCHAR2(50) NOT NULL,
	AEROPUERTO NVARCHAR2(50)
);

CREATE TABLE DETALLE_COMPRA
(
	ID_BOLETA NVARCHAR2(50) NOT NULL,
	PASAJE NVARCHAR2(50),
	TASAS NUMBER,
	CANTIDAD NVARCHAR2(50),
	PRECIO_UNITARIO NUMBER,
	TOTAL_DETALLE NUMBER
);

CREATE TABLE ENCUESTA
(
	ID_ENCUESTA NVARCHAR2(50) NOT NULL,
	ID_BOLETA NVARCHAR2(50),
	VALORACION NVARCHAR2(50),
	SUGERENCIA NVARCHAR2(50)
);

CREATE TABLE FORMA_PAGO
(
	ID_PAGO NVARCHAR2(50) NOT NULL,
	TOTAL_PAGO NUMBER,
	ID_BOLETA NVARCHAR2(50),
	ESTADO NVARCHAR2(50)
);

CREATE TABLE ITINERARIO
(
	ID_ITINERARIO NVARCHAR2(50) NOT NULL,
	HORA_LLEGADA NVARCHAR2(50),
	HORA_SALIDA NVARCHAR2(50),
	FECHA_LLEGADA DATE,
	FECHA_SALIDA DATE,
	ORIGEN NVARCHAR2(50),
	DESTINO NVARCHAR2(50)
);

CREATE TABLE ORIGEN
(
	ID_ORIGEN NVARCHAR2(50) NOT NULL,
	AEROPUERTO NVARCHAR2(50)
);

CREATE TABLE PAIS
(
	ID_PAIS NVARCHAR2(50) NOT NULL,
	NOMBRE NVARCHAR2(50)
);

CREATE TABLE PASAJE
(
	ID_PASAJE NVARCHAR2(50) NOT NULL,
	CLASE NVARCHAR2(50),
	ASIENTO NVARCHAR2(50),
	VALOR NUMBER,
	VUELO NVARCHAR2(50),
	PASAJERO NVARCHAR2(50),
	DESCUENTO NUMBER
);

CREATE TABLE PASAJERO
(
	ID_PASAJERO NVARCHAR2(50) NOT NULL,
	NOMBRE NVARCHAR2(50),
	APELLIDO NVARCHAR2(50),
	FECHA_NACIMIENTO DATE,
	DOCUMENTO NVARCHAR2(50),
	N_DOCUMENTO NVARCHAR2(50),
	N_TELEFONO NVARCHAR2(50) UNIQUE,
	CORREO NVARCHAR2(50) UNIQUE,
	GENERO NVARCHAR2(50)
);

CREATE TABLE VUELO
(
	ID_VUELO NVARCHAR2(50) NOT NULL,
	CAPACIDAD NUMBER,
	NUMERO_VUELO NVARCHAR2(50),
	AVION NVARCHAR2(50),
	ITINERARIO NVARCHAR2(50)
);

CREATE TABLE CARRITO
(
	ID_PASAJE NVARCHAR2(50) NOT NULL,
	ID_CLIENTE NVARCHAR2(50) NOT NULL,
	CANTIDAD NUMBER,
	PRECIO_UNITARIO NUMBER
);

-- DEFINICION DE CLAVES PRIMARIAS
ALTER TABLE AEROPUERTO ADD CONSTRAINT PK_AEROPUERTO PRIMARY KEY (ID_AEROPUERTO);
ALTER TABLE AVION ADD CONSTRAINT PK_AVION PRIMARY KEY (ID_AVION);
ALTER TABLE BOLETA ADD CONSTRAINT PK_BOLETA PRIMARY KEY (ID_BOLETA);
ALTER TABLE CIUDAD ADD CONSTRAINT PK_CIUDAD PRIMARY KEY (ID_CIUDAD);
ALTER TABLE CLIENTE ADD CONSTRAINT PK_CLIENTE PRIMARY KEY (ID_CLIENTE);
ALTER TABLE CREDITO ADD CONSTRAINT PK_CREDITO PRIMARY KEY (ID_CREDITO);
ALTER TABLE DEBITO ADD CONSTRAINT PK_DEBITO PRIMARY KEY (ID_DEBITO);
ALTER TABLE DESTINO ADD CONSTRAINT PK_DESTINO PRIMARY KEY (ID_DESTINO);
ALTER TABLE DETALLE_COMPRA ADD CONSTRAINT PK_DETALLE_COMPRA PRIMARY KEY (ID_BOLETA,PASAJE);
ALTER TABLE ENCUESTA ADD CONSTRAINT PK_ENCUESTA PRIMARY KEY (ID_ENCUESTA,ID_BOLETA);
ALTER TABLE FORMA_PAGO ADD CONSTRAINT PK_FORMA_PAGO PRIMARY KEY (ID_PAGO,ID_BOLETA);
ALTER TABLE ITINERARIO ADD CONSTRAINT PK_ITINERARIO PRIMARY KEY (ID_ITINERARIO);
ALTER TABLE ORIGEN ADD CONSTRAINT PK_ORIGEN PRIMARY KEY (ID_ORIGEN);
ALTER TABLE PAIS ADD CONSTRAINT PK_PAIS PRIMARY KEY (ID_PAIS);
ALTER TABLE PASAJE ADD CONSTRAINT PK_PASAJE PRIMARY KEY (ID_PASAJE);
ALTER TABLE PASAJERO ADD CONSTRAINT PK_PASAJERO PRIMARY KEY (ID_PASAJERO);
ALTER TABLE VUELO ADD CONSTRAINT PK_VUELO PRIMARY KEY (ID_VUELO);
ALTER TABLE CARRITO ADD CONSTRAINT PK_CARRITO PRIMARY KEY (ID_PASAJE,ID_CLIENTE);
ALTER TABLE BANCO ADD CONSTRAINT PK_BANCO PRIMARY KEY (ID_BANCO,ID_PAGO);

-- DEFINICION DE CLAVES FORANEAS
ALTER TABLE BOLETA ADD CONSTRAINT FK_BOLETA_CLIENTE FOREIGN KEY (CLIENTE) REFERENCES CLIENTE (ID_CLIENTE) ON DELETE CASCADE;
ALTER TABLE FORMA_PAGO ADD CONSTRAINT FK_PAGO_BOLETA FOREIGN KEY (ID_BOLETA) REFERENCES BOLETA (ID_BOLETA) ON DELETE CASCADE;
ALTER TABLE DETALLE_COMPRA ADD CONSTRAINT FK_DETALLE_BOLETA FOREIGN KEY (ID_BOLETA) REFERENCES BOLETA (ID_BOLETA) ON DELETE CASCADE;
ALTER TABLE DETALLE_COMPRA ADD CONSTRAINT FK_DETALLE_PASAJE FOREIGN KEY (PASAJE) REFERENCES PASAJE (ID_PASAJE) ON DELETE CASCADE;
ALTER TABLE ENCUESTA ADD CONSTRAINT FK_ENCUESTA_BOLETA FOREIGN KEY (ID_BOLETA) REFERENCES BOLETA (ID_BOLETA) ON DELETE CASCADE;
ALTER TABLE CARRITO ADD CONSTRAINT FK_CARRITO_PASAJE FOREIGN KEY (ID_PASAJE) REFERENCES PASAJE (ID_PASAJE) ON DELETE CASCADE;
ALTER TABLE CARRITO ADD CONSTRAINT FK_CARRITO_CLIENTE FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE (ID_CLIENTE) ON DELETE CASCADE;
ALTER TABLE PASAJE ADD CONSTRAINT FK_PASAJE_VUELO FOREIGN KEY (VUELO) REFERENCES VUELO (ID_VUELO) ON DELETE CASCADE;
ALTER TABLE PASAJE ADD CONSTRAINT FK_PASAJE_PASAJERO FOREIGN KEY (PASAJERO) REFERENCES PASAJERO (ID_PASAJERO) ON DELETE CASCADE;
ALTER TABLE VUELO ADD CONSTRAINT FK_VUELO_AVION FOREIGN KEY (AVION) REFERENCES AVION (ID_AVION) ON DELETE CASCADE;
ALTER TABLE VUELO ADD CONSTRAINT FK_VUELO_ITINERARIO FOREIGN KEY (ITINERARIO) REFERENCES ITINERARIO (ID_ITINERARIO) ON DELETE CASCADE;
ALTER TABLE ITINERARIO ADD CONSTRAINT FK_ITINERARIO_DESTINO FOREIGN KEY (DESTINO) REFERENCES DESTINO (ID_DESTINO) ON DELETE CASCADE;
ALTER TABLE ITINERARIO ADD CONSTRAINT FK_ITINERARIO_ORIGEN FOREIGN KEY (ORIGEN) REFERENCES ORIGEN (ID_ORIGEN) ON DELETE CASCADE;
ALTER TABLE DESTINO ADD CONSTRAINT FK_DESTINO_AEROPUERTO FOREIGN KEY (AEROPUERTO) REFERENCES AEROPUERTO (ID_AEROPUERTO) ON DELETE CASCADE;
ALTER TABLE ORIGEN ADD CONSTRAINT FK_ORIGEN_AEROPUERTO FOREIGN KEY (AEROPUERTO) REFERENCES AEROPUERTO (ID_AEROPUERTO) ON DELETE CASCADE;
ALTER TABLE AEROPUERTO ADD CONSTRAINT FK_AEROPUERTO_CIUDAD FOREIGN KEY (CIUDAD) REFERENCES CIUDAD (ID_CIUDAD) ON DELETE CASCADE;
ALTER TABLE CIUDAD ADD CONSTRAINT FK_CIUDAD_PAIS FOREIGN KEY (PAIS) REFERENCES PAIS (ID_PAIS) ON DELETE CASCADE;

ALTER TABLE BANCO ADD CONSTRAINT FK_BANCO_CREDITO FOREIGN KEY (ID_PAGO) REFERENCES CREDITO (ID_CREDITO) ON DELETE CASCADE;
ALTER TABLE BANCO ADD CONSTRAINT FK_BANCO_DEBITO FOREIGN KEY (ID_PAGO) REFERENCES DEBITO (ID_DEBITO) ON DELETE CASCADE;

-- CREACION DE FUNCION PARA VERIFICAR LA EXISTENCIA DE UN PAIS
CREATE OR REPLACE FUNCTION VERIFICAR_PAIS(
	ID_P IN PAIS.ID_PAIS%TYPE
) RETURN BOOLEAN

IS 
	AUX NUMBER;
BEGIN 
	SELECT COUNT(*) INTO AUX FROM PAIS WHERE ID_PAIS=ID_P;
	IF AUX>0 THEN 
		RETURN TRUE;
	ELSE 
		RETURN FALSE;
	END IF;

	EXCEPTION
		WHEN NO_DATA_FOUND THEN
			DBMS_OUTPUT.PUT_LINE('NO SE HAN ENCONTRADO LOS DATOS');
			ROLLBACK;
		WHEN OTHERS THEN
			DBMS_OUTPUT.PUT_LINE('HA OCURRIDO UN ERROR'|| SQLERRM);
			ROLLBACK;
END;

-- CREACION DE PROCEDIMIENTO PARA INSERTAR DATOS A LA TABLA PAIS
CREATE OR REPLACE PROCEDURE INSERTAR_PAIS(
	 ID_P  IN PAIS.ID_PAIS%TYPE,
	 NOMBRE_P IN PAIS.NOMBRE%TYPE
)
IS 

	PAIS_EXISTE EXCEPTION;

BEGIN 
	IF VERIFICAR_PAIS(ID_P)= FALSE THEN 
		LOCK TABLE PAIS IN ROW EXCLUSIVE MODE;
		INSERT INTO PAIS VALUES (ID_P,NOMBRE_P);
		COMMIT;
	ELSE
		RAISE PAIS_EXISTE;
	END IF;

	EXCEPTION
        WHEN PAIS_EXISTE THEN 
			RAISE_APPLICATION_ERROR(-20001,'PAIS INGRESADO YA EXISTE');
			ROLLBACK;

		WHEN OTHERS THEN 
			RAISE_APPLICATION_ERROR(-20001,'ERROR SISTEMA');
			ROLLBACK;
END;

-- CREACION DE PROCEDIMIENTO PARA BORRAR DATOS A LA TABLA PAIS
CREATE OR REPLACE PROCEDURE BORRAR_PAIS
(
    ID_P  IN PAIS.ID_PAIS%TYPE
)
IS 
    PAIS_NO_EXISTE EXCEPTION;
BEGIN 
	IF VERIFICAR_PAIS(ID_P)= TRUE THEN 
		LOCK TABLE PAIS IN ROW EXCLUSIVE MODE;
		DELETE FROM PAIS WHERE ID_P=PAIS.ID_PAIS;
		COMMIT;
	ELSE
		RAISE PAIS_NO_EXISTE;
	END IF;

	EXCEPTION
        WHEN PAIS_NO_EXISTE THEN 
			RAISE_APPLICATION_ERROR(-20001,'PAIS INGRESADO NO EXISTE');
			ROLLBACK;

		WHEN OTHERS THEN 
			RAISE_APPLICATION_ERROR(-20001,'ERROR SISTEMA');
			ROLLBACK;
END BORRAR_PAIS;

-- CREACION DE PROCEDIMIENTO PARA ACTUALIZAR DATOS A LA TABLA PAIS
CREATE OR REPLACE PROCEDURE INSERTAR_PAIS(
	 ID_P  IN PAIS.ID_PAIS%TYPE,
	 NOMBRE_P IN PAIS.NOMBRE%TYPE
)
IS 

	PAIS_EXISTE EXCEPTION;

BEGIN 
	IF VERIFICAR_PAIS(ID_P)= FALSE THEN 
		LOCK TABLE PAIS IN ROW EXCLUSIVE MODE;
		INSERT INTO PAIS VALUES (ID_P,NOMBRE_P);
		COMMIT;
	ELSE
		RAISE PAIS_EXISTE;
	END IF;

	EXCEPTION
        WHEN PAIS_EXISTE THEN 
			RAISE_APPLICATION_ERROR(-20001,'PAIS INGRESADO YA EXISTE');
			ROLLBACK;

		WHEN OTHERS THEN 
			RAISE_APPLICATION_ERROR(-20001,'ERROR SISTEMA');
			ROLLBACK;
END;

-- TRIGGER PARA DEJAR EN MAYUSCULA LOS ATRIBUTOS DE PAIS
CREATE OR REPLACE TRIGGER MAYUSCULA_PAIS
BEFORE INSERT ON PAIS
FOR EACH ROW
DECLARE
BEGIN
    :NEW.ID_PAIS := UPPER(:NEW.ID_PAIS);
    :NEW.NOMBRE := UPPER(:NEW.NOMBRE);
END;

-- INSERCION DE UN PAIS
INSERT INTO PAIS(ID_PAIS, NOMBRE)
    VALUES ('CHI','CHILE');
-- INSERCION DE UN PAIS
INSERT INTO PAIS(ID_PAIS, NOMBRE)
    VALUES ('ARG','ARGENTINA');
-- INSERCION DE UN PAIS
INSERT INTO PAIS(ID_PAIS, NOMBRE)
    VALUES ('BOL','BOLIVIA');
    
CALL INSERTAR_PAIS('ARG','argentina');
SELECT * FROM PAIS;

CALL BORRAR_PAIS('ARG');
