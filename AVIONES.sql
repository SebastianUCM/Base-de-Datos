-- ELIMINACION DE TABLAS MEDIANTE PROCEDIMIENTOS
--DROP TABLE VISITA
DROP TABLE AEROPUERTO;
DROP TABLE AVION;
DROP TABLE BOLETA;
DROP TABLE CIUDAD;
DROP TABLE CLIENTE;
DROP TABLE COMPAÑIA;
DROP TABLE CREDITO;
DROP TABLE DEBITO;
DROP TABLE DESTINO;
DROP TABLE DETALLE_COMPRA;
DROP TABLE ENCUESTA;
DROP TABLE FORMA_PAGO;
DROP TABLE ITINERARIO;
DROP TABLE ORIGEN;
DROP TABLE PAIS;
DROP TABLE PASAJE;
DROP TABLE PASAJERO;
DROP TABLE VUELO;

CREATE TABLE AEROPUERTO
(

);
CREATE TABLE AVION;
CREATE TABLE BOLETA;
CREATE TABLE CIUDAD;
CREATE TABLE CLIENTE;
CREATE TABLE COMPAÑIA;
CREATE TABLE CREDITO;
CREATE TABLE DEBITO;
CREATE TABLE DESTINO;
CREATE TABLE DETALLE_COMPRA;
CREATE TABLE ENCUESTA;
CREATE TABLE FORMA_PAGO;
CREATE TABLE ITINERARIO;
CREATE TABLE ORIGEN;
CREATE TABLE PAIS;
CREATE TABLE PASAJE;
CREATE TABLE PASAJERO;
CREATE TABLE VUELO;
/*CREATE OR REPLACE PROCEDURE BORRAR_TABLAS
IS
	BORRAR_TABLA_SERVICIO VARCHAR2(1000);
	BORRAR_TABLA_DEPENDENCIA VARCHAR2(1000);
	BORRAR_TABLA_CAMARA VARCHAR2(1000);
	BORRAR_TABLA_TRIPULACION VARCHAR2(1000);
	BORRAR_TABLA_VISITA VARCHAR2(1000);
	BORRAR_TABLA_PLANETA VARCHAR2(1000);
	BORRAR_TABLA_HABITA VARCHAR2(1000);
	BORRAR_TABLA_RAZA VARCHAR2(1000);

	TABLA_NO_EXISTE EXCEPTION;
	PRAGMA EXCEPTION_INIT(TABLA_NO_EXISTE, -942);

BEGIN
	BORRAR_TABLA_SERVICIO :='DROP TABLE SERVICIO';
	BORRAR_TABLA_DEPENDENCIA :='DROP TABLE DEPENDENCIA';
	BORRAR_TABLA_CAMARA :='DROP TABLE CAMARA';
	BORRAR_TABLA_TRIPULACION :='DROP TABLE TRIPULACION';
	BORRAR_TABLA_VISITA :='DROP TABLE VISITA';
	BORRAR_TABLA_PLANETA :='DROP TABLE PLANETA';
	BORRAR_TABLA_HABITA :='DROP TABLE HABITA';
	BORRAR_TABLA_RAZA :='DROP TABLE RAZA';

	EXECUTE IMMEDIATE BORRAR_TABLA_SERVICIO;
	EXECUTE IMMEDIATE BORRAR_TABLA_DEPENDENCIA;
	EXECUTE IMMEDIATE BORRAR_TABLA_CAMARA;
	EXECUTE IMMEDIATE BORRAR_TABLA_TRIPULACION;
	EXECUTE IMMEDIATE BORRAR_TABLA_VISITA;
	EXECUTE IMMEDIATE BORRAR_TABLA_PLANETA;
	EXECUTE IMMEDIATE BORRAR_TABLA_HABITA;
	EXECUTE IMMEDIATE BORRAR_TABLA_RAZA;

	COMMIT;

	EXCEPTION
		WHEN TABLA_NO_EXISTE THEN
		RAISE_APPLICATION_ERROR(-20001,'LAS TABLAS QUE DESEA ELIMINAR NO EXISTEN');
		ROLLBACK;
		WHEN OTHERS THEN
		RAISE_APPLICATION_ERROR(-20001,'HA OCURRIDO UN ERROR AL ELIMINAR LAS TABLAS');
		ROLLBACK
END;

-- CREACION DE TABLAS MEDIANTE PROCEDIMIENTOS
CREATE OR REPLACE PROCEDURE CREAR_TABLAS
IS
	SERVICIO VARCHAR2(1000);
	DEPENDENCIA VARCHAR2(1000);
	CAMARA VARCHAR2(1000);
	TRIPULACION VARCHAR2(1000);
	VISITA VARCHAR2(1000);
	PLANETA VARCHAR2(1000);
	HABITA VARCHAR2(1000);
	RAZA VARCHAR2(1000);

	TABLA_EXISTE EXCEPTION;
	PRAGMA EXCEPTION_INIT(TABLA_EXISTE, -955);

BEGIN 
	SERVICIO := 'CREATE TABLE SERVICIO
				(
					CLAVE NVARCHAR2 (20),
					NOMBRE_S NVARCHAR2 (20)
				)';
	
	DEPENDENCIA:='CREATE TABLE DEPENDENCIA
				(
					COD_D NVARCHAR2 (20),
					NOMBRE_D NVARCHAR2 (20),
					FUNCION NVARCHAR2 (20),
					LOCALIZACION NVARCHAR2 (20),
					CLAVE_S NVARCHAR2 (20),
					NOMBRE_S NVARCHAR2 (20)
				)';

	CAMARA := 'CREATE TABLE CAMARA
				(	
					COD_C NVARCHAR2 (20),
					CATEGORIA NVARCHAR2 (20),
					CAPACIDAD NUMBER
				)';

	TRIPULACION := 'CREATE TABLE TRIPULACION
				(
					COD_T NVARCHAR2 (20),
					PLANETA NVARCHAR2 (20),
					CATEGORIA NVARCHAR2 (20),
					ANTIGUEDAD NVARCHAR2 (20),
					PROCEDENCIA_ADM NVARCHAR2 (20),
					DEP NVARCHAR2 (20),
					CAM NVARCHAR2 (20)
				)';

	VISITA := 'CREATE TABLE VISITA
				(
					COD_T NVARCHAR2 (20), 
					PLANETA NVARCHAR2 (20),
					FECHA_VISITA DATE,
					TIEMPO NUMBER
				)';

	PLANETA := 'CREATE TABLE PLANETA
				(
					COD_P NVARCHAR2 (20),
					NOMBRE_P NVARCHAR2 (20),
					GALAXIA NVARCHAR2 (20),
					COORDENADAS NVARCHAR2 (20)
				)';

	HABITA := 'CREATE TABLE HABITA
				(
					PLANETA NVARCHAR2 (20),
					RAZA NVARCHAR2 (20),
					POBLACION_PARCIAL NUMBER
				)';

	RAZA : ='CREATE TABLE RAZA
				(
					NOMBRE_R NVARCHAR2 (20),
					ALTURA NUMBER,
					ANCHURA NUMBER,
					PESO NUMBER,
					POBLACION_TOTAL NUMBER
				)';

	EXECUTE IMMEDIATE SERVICIO;
	EXECUTE IMMEDIATE DEPENDENCIA;
	EXECUTE IMMEDIATE CAMARA;
	EXECUTE IMMEDIATE TRIPULACION;
	EXECUTE IMMEDIATE VISITA;
	EXECUTE IMMEDIATE PLANETA;
	EXECUTE IMMEDIATE HABITA;
	EXECUTE IMMEDIATE RAZA;

	COMMIT;

	EXCEPTION
		WHEN TABLA_EXISTE THEN
			RAISE_APPLICATION_ERROR(-20001,'UNA O MAS DE LAS TABLAS YA EXISTEN');
			ROLLBACK;
		WHEN OTHERS THEN
			RAISE_APPLICATION_ERROR(-20001,'HA OCURRIDO UN ERROR AL CREAR LAS TABLAS');
			ROLLBACK;
END;
-- DEFINICION DE PRIMARY KEYS MEDIANTE PROCEDIMIENTOS
CREATE OR REPLACE PROCEDURE DEFINE_PRIMARIAS
IS
	PK_SERVICIO VARCHAR2(1000);
	PK_DEPENDENCIA VARCHAR2(1000);
	PK_CAMARA VARCHAR2(1000);
	PK_TRIPULACION VARCHAR2(1000);
	PK_VISITA VARCHAR2(1000);
	PK_PLANETA VARCHAR2(1000);
	PK_HABITA VARCHAR2(1000);
	PK_RAZA VARCHAR2(1000);

	PRIMARIA_EXISTE EXCEPTION;
	PRAGMA EXCEPTION_INIT(PRIMARIA_EXISTE,-2260);

BEGIN
	PK_SERVICIO :='ALTER TABLE SERVICIO
				ADD CONSTRAINT PK_SERVICIO
				PRIMARY KEY (CLAVE, NOMBRE_S)';

	PK_DEPENDENCIA :='ALTER TABLE DEPENDENCIA
				ADD CONSTRAINT PK_DEPENDENCIA
				PRIMARY KEY (COD_D)';

	PK_CAMARA :='ALTER TABLE CAMARA
				ADD CONSTRAINT PK_CAMARA
				PRIMARY KEY (COD_C)';

	PK_TRIPULACION :='ALTER TABLE TRIPULACION
				ADD CONSTRAINT PK_TRIPULACION
				PRIMARY KEY (COD_T)';

	PK_VISITA :='ALTER TABLE VISITA
				ADD CONSTRAINT PK_VISITA
				PRIMARY KEY (COD_T, COD_P, FECHA_VISITA)';

	PK_PLANETA :='ALTER TABLE PLANETA
				ADD CONSTRAINT PK_PLANETA
				PRIMARY KEY (COD_P)';

	PK_HABITA :='ALTER TABLE HABITA
				ADD CONSTRAINT PK_HABITA
				PRIMARY KEY (PLANETA,RAZA)';

	PK_RAZA :='ALTER TABLE RAZA
				ADD CONSTRAINT PK_RAZA
				PRIMARY KEY (NOMBRE_R)';

	EXECUTE IMMEDIATE PK_SERVICIO;
	EXECUTE IMMEDIATE PK_DEPENDENCIA;
	EXECUTE IMMEDIATE PK_CAMARA;
	EXECUTE IMMEDIATE PK_TRIPULACION;
	EXECUTE IMMEDIATE PK_VISITA;
	EXECUTE IMMEDIATE PK_PLANETA;
	EXECUTE IMMEDIATE PK_HABITA;
	EXECUTE IMMEDIATE PK_RAZA;

	COMMIT;

	EXCEPTION
		WHEN PRIMARIA_EXISTE THEN
		RAISE_APPLICATION_ERROR (-20001,'LAS CLAVES PRIMARIAS YA FUERON CREADAS');
		ROLLBACK;
		WHEN OTHERS THEN 
		RAISE_APPLICATION_ERROR (-20001,'HA OCURRIDO UN ERROR AL CREAR LA CLAVE');
		ROLLBACK;
END;
-- DEFINICION DE FOREIGN KEYS NEDIANTE PROCEDIMIENTOS
CREATE OR REPLACE PROCEDURE DEFINE_FORANEAS
IS
	FK_SERVICIO_DEPENDENCIA VARCHAR2(1000);
	FK_DEPENDENCIA_CAMARA VARCHAR2(1000);
	FK_CAMARA_TRIPULACION VARCHAR2(1000);
	FK_DEPENDENCIA_TRIPULACION VARCHAR2(1000);
	FK_TRIPULACION_VISITA VARCHAR2(1000);
	FK_PLANETA_VISITA VARCHAR2(1000);
	FK_PLANETA_HABITA VARCHAR2(1000);
	FK_RAZA_HABITA VARCHAR2(1000);
BEGIN
	FK_SERVICIO_DEPENDENCIA :='ALTER TABLE
				ADD CONSTRAINT FK_ 
				REFERENCES ()
				ON DELETE ';
	FK_DEPENDENCIA_CAMARA :='ALTER TABLE
				ADD CONSTRAINT FK_ 
				REFERENCES ()
				ON DELETE ';
	FK_CAMARA_TRIPULACION :='ALTER TABLE
				ADD CONSTRAINT FK_ 
				REFERENCES ()
				ON DELETE ';
	FK_DEPENDENCIA_TRIPULACION :='ALTER TABLE
				ADD CONSTRAINT FK_ 
				REFERENCES ()
				ON DELETE ';
	FK_TRIPULACION_VISITA :='ALTER TABLE
				ADD CONSTRAINT FK_ 
				REFERENCES ()
				ON DELETE ';
	FK_PLANETA_VISITA :='ALTER TABLE
				ADD CONSTRAINT FK_ 
				REFERENCES ()
				ON DELETE ';
	FK_PLANETA_HABITA :='ALTER TABLE
				ADD CONSTRAINT FK_ 
				REFERENCES ()
				ON DELETE ';
	FK_RAZA_HABITA :='ALTER TABLE
				ADD CONSTRAINT FK_ 
				REFERENCES ()
				ON DELETE ';
	COMMIT;
END;

CALL BORRAR_TABLAS();
CALL CREAR_TABLAS();
CALL DEFINE_PRIMARIAS();
CALL DEFINE_FORANEAS();*/